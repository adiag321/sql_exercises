Weâ€™re given a list of at least three numbers named sides. Each entry in sides represents the length of a side of a triangle.

Write a function possible_triangles to determine the number of possible triangles that can be formed using the given side lengths.

In the case that more than three side lengths are given, there may be several possible triangles.

Note: If there are multiple equal side lengths in the list, we consider them as distinct sides.
-------------------------------------------------------------------------------------------------------------------------------------------
from itertools import combinations as comb

def checker(t):

    a,b,c = t
    if a+b>c and a+c>b and b+c>a:
        return True
    return False

def possible_triangles(sides):
    res = 0
    for three_tuple in comb(sides,3):
        if checker((three_tuple)):
            res+=1
    
    return res

------------------------------------------------------
from itertools import combinations

def possible_triangles(sides):
    triangles = combinations(sides,3)
    def legal_triangle(triangle):
        a, b, c = triangle[0], triangle[1], triangle[2]
        checks = [c < a+b,b < a+c, a < b+c] # triangle inequality
        return all(checks)
     # get sublist
    count = 0
    for triangle in triangles:
        if legal_triangle(triangle):
            count += 1
    return count
