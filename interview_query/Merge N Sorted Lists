Given a list of sorted integer lists, write a function sort_lists to create a combined list while maintaining sorted order without importing any libraries or using the 'sort' or 'sorted' functions in Python.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

import heapq
def sort_lists(lists):
    
    res = []

    for l in lists:
        res.extend(l)
    
    heapq.heapify(res)
    r = []
    while res:

        t =heapq.heappop(res)
        r.append(t)
    return r
------------------------------------------------------------------------------------------------------------------------


def sort_lists(lists):
    
    indexes = [0]*len(lists_numbers)
    end_flag = False
    sorted_list = []
    const_max_number = max([max(inner_list) for inner_list in lists_numbers])+1

    while not end_flag:
        end_flag = True
        min_index = 0
        min_number =const_max_number
        for i in range(len(lists_numbers)):
            if indexes[i] < len(lists_numbers[i]):
                end_flag = False
            else:
                continue
            
            if lists_numbers[i][indexes[i]]< min_number:
                min_number = lists_numbers[i][indexes[i]]
                min_index = i
        if not end_flag:
            sorted_list.append(min_number)
            indexes[min_index] +=1
    return sorted_list
            

